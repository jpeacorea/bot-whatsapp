export class Procesar {
    constructor(
        public UsuarioCreado: string,
        public FechaDocumento: string,
        public CodigoUnico: string = "",
        public DescuentoGeneral: string,
        public Estatus: string,
        public CodigoCliente: string,
        public Latitud: string,
        public Longitud: string,
        public CondicionPago: string,
        public Plazo: string,
        public FechaVencimiento: string,
        public Comentarios: string,
        public Moneda: string,
        public TipoCambio: string,
        public FechaEmisionExonera: string,
        public TipoDocExonera: string,
        public NumDocExonera: string,
        public NombreInstituExonera: string,
        public PorcCompraExonera: string,
        public CodigoInstitucion: string,
        public ArtículoExoneracion: string,
        public IncisoExoneracion: string,
        public NumOrdenCompra: string,
        public TipoDoc: string,
        public CodigoActividadEconomica: string,
        public CodigoActividadEconomicaReceptor: string,
        public TipoOtroDoc: string,
        public TipoReferencia: string,
        public FacturaReferenciada: string,
        public CodigoReferencia: string,
        public Razon: string,
        public ReferenciaManual: string,
        public TipoPago: string,
        public BancoPago: string,
        public MontoPago: string,
        public DocumentoPago: string,
        public Linea: string,
        public OtrosCargos: string,
        public Facturas: string,
        public EntregarEn: string,
        public Adicional1: string,
        public Adicional2: string,
        public Adicional3: string,
        public Adicional4: string,
        public Adicional5: string,
        public Adicional7: string,
        public token: string,
        public entidad: string,
        public NumConsecutivo: string
    ) {
        this.UsuarioCreado = UsuarioCreado;
        this.FechaDocumento = FechaDocumento;
        this.CodigoUnico = CodigoUnico;
        this.DescuentoGeneral = DescuentoGeneral;
        this.Estatus = Estatus;
        this.CodigoCliente = CodigoCliente;
        this.Latitud = Latitud;
        this.Longitud = Longitud;
        this.CondicionPago = CondicionPago;
        this.Plazo = Plazo;
        this.FechaVencimiento = FechaVencimiento;
        this.Comentarios = Comentarios;
        this.Moneda = Moneda;
        this.TipoCambio = TipoCambio;
        this.FechaEmisionExonera = FechaEmisionExonera;
        this.TipoDocExonera = TipoDocExonera;
        this.NumDocExonera = NumDocExonera;
        this.NombreInstituExonera = NombreInstituExonera;
        this.PorcCompraExonera = PorcCompraExonera;
        this.CodigoInstitucion = CodigoInstitucion;
        this.ArtículoExoneracion = ArtículoExoneracion;
        this.IncisoExoneracion = IncisoExoneracion;
        this.NumOrdenCompra = NumOrdenCompra;
        this.TipoDoc = TipoDoc;
        this.CodigoActividadEconomica = CodigoActividadEconomica;
        this.CodigoActividadEconomicaReceptor = CodigoActividadEconomicaReceptor;
        this.TipoOtroDoc = TipoOtroDoc;
        this.TipoReferencia = TipoReferencia;
        this.FacturaReferenciada = FacturaReferenciada;
        this.CodigoReferencia = CodigoReferencia;
        this.Razon = Razon;
        this.ReferenciaManual = ReferenciaManual;
        this.TipoPago = TipoPago;
        this.BancoPago = BancoPago;
        this.MontoPago = MontoPago;
        this.DocumentoPago = DocumentoPago;
        this.Linea = Linea;
        this.OtrosCargos = OtrosCargos;
        this.Facturas = Facturas;
        this.EntregarEn = EntregarEn;
        this.Adicional1 = Adicional1;
        this.Adicional2 = Adicional2;
        this.Adicional3 = Adicional3;
        this.Adicional4 = Adicional4;
        this.Adicional5 = Adicional5;
        this.Adicional7 = Adicional7;
        this.token = token;
        this.entidad = entidad;
        this.NumConsecutivo = NumConsecutivo;
    }
}
